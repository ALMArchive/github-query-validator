import { QueryObject } from "./types";
declare const validUserName: (usrnm: string) => boolean;
declare const validOrgName: (usrnm: string) => boolean;
declare const validSize: (size: string) => boolean;
declare const validForks: (forks: string) => boolean;
declare const validFork: (fork: string | boolean) => boolean;
declare const validStars: (stars: string) => boolean;
declare const validTopics: (topics: string) => boolean;
declare const validIn: (val: string) => boolean;
declare const validLang: (lang: string) => boolean;
declare const validTopic: (topic: string) => boolean;
declare const validAddl: (addl: string) => boolean;
declare const validLicense: (lice: string) => boolean;
declare const validCreated: (created: string) => boolean;
declare const validPushed: (pushed: string) => boolean;
declare const validUpdated: (updated: string) => boolean;
declare const validMirror: (mirr: string | boolean) => boolean;
declare const validArchived: (arch: string | boolean) => boolean;
declare const validIs: (is: string) => boolean;
declare const validKeys: (qObj: QueryObject) => boolean;
declare const queryObjValidator: (qObj: QueryObject, throwOnErr?: boolean) => boolean;
declare const queryValidator: (q: string, throwOnErr?: boolean) => boolean;
declare const queryObjToString: (qObj: QueryObject, throwOnErr?: boolean) => string;
declare const queryStringToObj: (q: string) => QueryObject;
export { validUserName, validOrgName, validIn, validStars, validForks, validFork, validSize, validCreated, validPushed, validUpdated, validLang, validTopic, validTopics, validLicense, validIs, validMirror, validArchived, validAddl, validKeys, queryObjValidator, queryValidator, queryObjToString, queryStringToObj };
